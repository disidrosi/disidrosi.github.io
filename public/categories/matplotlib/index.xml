<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Matplotlib on Tobia Cavalli</title>
    <link>https://tobiacavalli.com/categories/matplotlib/</link>
    <description>Recent content in Matplotlib on Tobia Cavalli</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 14 Sep 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://tobiacavalli.com/categories/matplotlib/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Calculating the CIE color of Chlorophyll A and B using Python</title>
      <link>https://tobiacavalli.com/blog/cie-colors-python/</link>
      <pubDate>Sat, 14 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://tobiacavalli.com/blog/cie-colors-python/</guid>
      <description>&lt;h2 id=&#34;outline&#34;&gt;Outline&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tobiacavalli.com/blog/cie-colors-python/#1-what-is-color&#34;&gt;1. What is color?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tobiacavalli.com/blog/cie-colors-python/#2-the-cie-colorimetry-system&#34;&gt;2. The CIE colorimetry system&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tobiacavalli.com/blog/cie-colors-python/#3-python-code&#34;&gt;3. Python code&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tobiacavalli.com/blog/cie-colors-python/#31-python-libraries-for-color-analysis&#34;&gt;3.1. Python libraries for color analysis&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tobiacavalli.com/blog/cie-colors-python/#32-plot-settings&#34;&gt;3.2. Plot settings&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tobiacavalli.com/blog/cie-colors-python/#33-plotting-the-cie-2-color-space&#34;&gt;3.3. Plotting the CIE (2°) color space&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tobiacavalli.com/blog/cie-colors-python/#34-importing-and-scaling-data&#34;&gt;3.4. Importing and scaling data&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tobiacavalli.com/blog/cie-colors-python/#35-converting-absorbance-to-transmittance&#34;&gt;3.5. Converting absorbance to transmittance&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tobiacavalli.com/blog/cie-colors-python/#36-calculating-the-cie-colors&#34;&gt;3.6. Calculating the CIE colors&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tobiacavalli.com/blog/cie-colors-python/#37-visualizing-colors-on-the-cie-color-space&#34;&gt;3.7. Visualizing colors on the CIE color space&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tobiacavalli.com/blog/cie-colors-python/#4-conclusion&#34;&gt;4. Conclusion&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tobiacavalli.com/blog/cie-colors-python/#5-bibliography&#34;&gt;5. Bibliography&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&lt;div&gt;&#xA;    &lt;p class=&#34;alert-heading alert-heading-note&#34;&gt;&#xA;        &#xA;        &#xA;        Summary&#xA;        &#xA;    &lt;/p&gt;&#xA;    &lt;div class=&#34;alert-text alert-note&#34;&gt;&#xA;        &lt;p&gt;This post provides a step-by-step guide on how to calculate CIE colors from UV-Vis spectra using Python. We&amp;rsquo;ll look at the CIE colorimetry system and the underlying principles behind color perception.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="outline">Outline</h2>
<ul>
<li><a href="/blog/cie-colors-python/#1-what-is-color">1. What is color?</a></li>
<li><a href="/blog/cie-colors-python/#2-the-cie-colorimetry-system">2. The CIE colorimetry system</a></li>
<li><a href="/blog/cie-colors-python/#3-python-code">3. Python code</a>
<ul>
<li><a href="/blog/cie-colors-python/#31-python-libraries-for-color-analysis">3.1. Python libraries for color analysis</a></li>
<li><a href="/blog/cie-colors-python/#32-plot-settings">3.2. Plot settings</a></li>
<li><a href="/blog/cie-colors-python/#33-plotting-the-cie-2-color-space">3.3. Plotting the CIE (2°) color space</a></li>
<li><a href="/blog/cie-colors-python/#34-importing-and-scaling-data">3.4. Importing and scaling data</a></li>
<li><a href="/blog/cie-colors-python/#35-converting-absorbance-to-transmittance">3.5. Converting absorbance to transmittance</a></li>
<li><a href="/blog/cie-colors-python/#36-calculating-the-cie-colors">3.6. Calculating the CIE colors</a></li>
<li><a href="/blog/cie-colors-python/#37-visualizing-colors-on-the-cie-color-space">3.7. Visualizing colors on the CIE color space</a></li>
</ul>
</li>
<li><a href="/blog/cie-colors-python/#4-conclusion">4. Conclusion</a></li>
<li><a href="/blog/cie-colors-python/#5-bibliography">5. Bibliography</a></li>
</ul>



<div>
    <p class="alert-heading alert-heading-note">
        
        
        Summary
        
    </p>
    <div class="alert-text alert-note">
        <p>This post provides a step-by-step guide on how to calculate CIE colors from UV-Vis spectra using Python. We&rsquo;ll look at the CIE colorimetry system and the underlying principles behind color perception.</p>
<p>The core of the post focuses on practical implementation, guiding you through the Python code that performs the necessary calculations. If you&rsquo;re primarily interested in the coding aspect, you can skip directly to the <a href="/blog/cie-colors-python/#3-python-code">Python code section</a>.</p>

    </div>
</div>
<h2 id="1-what-is-color">1. What is color?</h2>
<p>Color isn&rsquo;t just a thing; it&rsquo;s a <em>feeling</em>. It&rsquo;s how our brains interpret light, and it&rsquo;s pretty subjective. Think about it: the same light can look different to different people, even under the same conditions. From a pure physical and biological point of view, it is a phenomenon arising from the human eye&rsquo;s interpretation of light within the visible spectrum (380&ndash;780 nm). It&rsquo;s not a physical property of light itself but a sensation created by the brain&rsquo;s processing of visual information.</p>
<p>Factors like lighting conditions, color vision deficiencies, and individual variations can influence how we perceive color. This subjectivity makes traditional scientific measurements, like spectroscopy, insufficient for directly quantifying color perception, as they focus only on the physical properties of light without considering their corresponding perceptual aspects.</p>
<p><strong>Psychophysics</strong> bridges this gap by quantifying the relationship between physical stimuli and the sensations they generate. As a field, it is primarily concerned with how humans perceive and interpret sensory inputs like colors, sounds, and textures. Guy Brindley&rsquo;s work in 1970 was a significant contribution to this field.<sup>1,2</sup></p>
<p>Brindley introduced the concept of observations to describe perceptual states during psychophysical tasks. He categorized observations into two types:</p>
<ol>
<li><strong>Class A observations:</strong> When two physically different stimuli are perceived as identical. Despite their distinct physical properties, the observer cannot distinguish between them.</li>
<li><strong>Class B observations:</strong> All other cases where stimuli are distinguishable.</li>
</ol>
<p>Color is a prime example of Class A observations. Two lights with different physical compositions can appear identical under certain conditions. For instance, a pure red light and a mixture of red, green, and blue light can be perceived as the same shade of red if viewed in low light or by someone with limited color sensitivity.</p>
<h2 id="2-the-cie-colorimetry-system">2. The CIE colorimetry system</h2>
<p>Given the subjectivity of color perception, how can we objectively measure and communicate colors? The <strong>CIE colorimetry system</strong> provides a solution by using <strong>color matching</strong> experiments to establish a statistical representation of human color vision, which provides a standardized method for relating spectral light distributions to perceived colors.</p>
<p>In these experiments, observers compare two stimuli under controlled conditions. If they appear identical despite their physical differences, they are considered perceptually equivalent. The CIE system, developed by the Commission Internationale d&rsquo;Éclairage, quantifies the relationship between wavelength distributions and perceived colors.<sup>3,4</sup></p>
<figure>
    <img src="img/cie_color_matching.png" alt="CIE color matching experiment"><figcaption class="md-figure-caption">CIE color matching experiment. Adapted from literature.</figcaption></figure><p>The CIE 1931 model, introduced in 1931, uses additive color mixing based on <strong>Color Matching Functions (CMFs)</strong>. These functions represent the spectral sensitivity of the three types of cone cells in the human eye, denoted as \(\bar{x}\), \(\bar{y}\), and \(\bar{z}\).</p>
<p>CMFs are derived from standardized experiments involving foveal vision, specific field sizes, dark surroundings, and average observations from multiple individuals, providing a statistical measure of color receptor sensitivity.</p>
<p>By convolution of the sample spectrum \(M(\lambda)\) with the CMFs, we calculate <strong>tristimulus values</strong> \(X\), \(Y\), and \(Z\). These values represent the amounts of the three primary colors (red, green, and blue) required to match the given color.</p>
$$
\begin{align}
    X &= \int_{380}^{780} M(\lambda) \bar{x}(\lambda)  \, d\lambda \tag{1}\\
    Y &= \int_{380}^{780} M(\lambda) \bar{y}(\lambda)  \, d\lambda \tag{2}\\
    Z &= \int_{380}^{780} M(\lambda) \bar{z}(\lambda)  \, d\lambda \tag{3}
\end{align}
$$<p>The tristimulus values define a point in a three-dimensional color space. However, for practical purposes, this space is often reduced to two dimensions using the \(x\) and \(y\) chromaticity coordinates:</p>
$$
\begin{align}
    x &= \frac{X}{X + Y + Z} \tag{4}\\
    y &= \frac{Y}{X + Y + Z} \tag{5}
\end{align}
$$<p>The \(x\) and \(y\) coordinates uniquely specify a color within the CIE color space, enabling a standardized and objective representation of color perception. This system has been (and is!) used in various industries, including printing, photography, lighting design, and digital media, where accurate color reproduction and communication are essential.</p>
<h2 id="3-python-code">3. Python code</h2>
<h3 id="31-python-libraries-for-color-analysis">3.1. Python libraries for color analysis</h3>
<p>Before diving into the code, let&rsquo;s import the necessary Python libraries:</p>
<ul>
<li><code>numpy</code>: This library is used for numerical computing. It defines efficient data structures and mathematical functions for working with arrays and matrices.</li>
<li><code>pandas</code>: This library is used for data analysis and manipulation. It defines data structures like DataFrames and Series for handling tabular data.</li>
<li><code>matplotlib</code>: This library is a standard for data visualization. It includes plotting functions for creating various types of charts and graphs.</li>
<li><code>colour-science</code>: This library provides specific tools for colorimetric analysis. It supports most major color systems and includes many color space conversions utilities, color difference metrics, and other color-related operations. You can read the corresponding documentation at <a href="https://colour.readthedocs.io">https://colour.readthedocs.io</a>.</li>
</ul>
<p>If you&rsquo;d like to replicate this analysis on your machine, you can install these libraries using the following <code>pip</code> command in your terminal or PowerShell (assuming you don&rsquo;t have them installed already):</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="ln">1</span><span class="cl">pip install numpy pandas matplotlib colour-science</span></span></code></pre></div><p>With the libraries installed, we can now import them into our script or Jupyter notebook:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln">1</span><span class="cl"><span class="kn">import</span> <span class="nn">colour</span> <span class="k">as</span> <span class="nn">cl</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="kn">import</span> <span class="nn">matplotlib.ticker</span> <span class="k">as</span> <span class="nn">tck</span>
</span></span><span class="line"><span class="ln">4</span><span class="cl"><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>
</span></span><span class="line"><span class="ln">5</span><span class="cl"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
</span></span><span class="line"><span class="ln">6</span><span class="cl">
</span></span><span class="line"><span class="ln">7</span><span class="cl"><span class="c1"># Disable some annoying warnings from colour library</span>
</span></span><span class="line"><span class="ln">8</span><span class="cl"><span class="n">cl</span><span class="o">.</span><span class="n">utilities</span><span class="o">.</span><span class="n">filter_warnings</span><span class="p">(</span><span class="n">colour_usage_warnings</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span></span></span></code></pre></div><h3 id="32-plot-settings">3.2. Plot settings</h3>
<p>I want the plot aesthetics to match the style of the blog, and therefore I&rsquo;m adding the following settings to customize the appearance of the graphics I am going to generate. If you&rsquo;re following along on your own machine (e.g., using Jupyter notebooks), you can skip this step.</p>
<p>Here, I am importing <code>seaborn</code>, a powerful library for statistical data visualization. I won&rsquo;t be using its statistical functions, but I prefer its default presets over the ones provided by <code>matplotlib</code>. After importing the library, I am setting:</p>
<ul>
<li><code>set_context(&quot;notebook&quot;)</code>: This setting ensures the plots are scaled appropriately for notebook environments, adjusting factors like label size and line thickness.</li>
<li><code>set_style(&quot;ticks&quot;)</code>: This sets the plot style to include ticks on the axes, providing visual reference points for the data.</li>
<li><code>set_palette(&quot;colorblind&quot;)</code>: Sets the default palette of colors that will be used for plottings, electing a color palette specifically designed for viewers with color blindness. The <code>color_codes</code> option remaps <code>matplotlib</code>&rsquo;s shorthand color codes (such as <code>r</code>, <code>g</code>, <code>b</code>, etc.).</li>
</ul>
<p>In addition, I am importing <code>golden_ratio</code> from the <code>scipy</code> library, which is equivalent to defining a variable containing the value 1.618. This is a mathematical constant als known as the <em>divine proportion</em>, which I will use to set the aspect ratio of the plots, specifically the ratio between the shorter and longer axes. It is absolutely not necessary, but I find that it helps create a more aesthetically pleasing visual balance.</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln"> 9</span><span class="cl"><span class="kn">import</span> <span class="nn">seaborn</span> <span class="k">as</span> <span class="nn">sns</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl"><span class="kn">from</span> <span class="nn">scipy.constants</span> <span class="kn">import</span> <span class="n">golden_ratio</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl">
</span></span><span class="line"><span class="ln">12</span><span class="cl"><span class="c1"># Set seaborn defaults</span>
</span></span><span class="line"><span class="ln">13</span><span class="cl"><span class="n">sns</span><span class="o">.</span><span class="n">set_context</span><span class="p">(</span><span class="s2">&#34;notebook&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl"><span class="n">sns</span><span class="o">.</span><span class="n">set_style</span><span class="p">(</span><span class="s2">&#34;ticks&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">15</span><span class="cl"><span class="n">sns</span><span class="o">.</span><span class="n">set_palette</span><span class="p">(</span><span class="s2">&#34;colorblind&#34;</span><span class="p">,</span> <span class="n">color_codes</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">16</span><span class="cl">
</span></span><span class="line"><span class="ln">17</span><span class="cl"><span class="c1"># Use white color for elements that are typically black</span>
</span></span><span class="line"><span class="ln">18</span><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">(</span><span class="s2">&#34;dark_background&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">19</span><span class="cl">
</span></span><span class="line"><span class="ln">20</span><span class="cl"><span class="c1"># Remove background from figures and axes</span>
</span></span><span class="line"><span class="ln">21</span><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">rcParams</span><span class="p">[</span><span class="s2">&#34;figure.facecolor&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&#34;none&#34;</span>
</span></span><span class="line"><span class="ln">22</span><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">rcParams</span><span class="p">[</span><span class="s2">&#34;axes.facecolor&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&#34;none&#34;</span>
</span></span><span class="line"><span class="ln">23</span><span class="cl">
</span></span><span class="line"><span class="ln">24</span><span class="cl"><span class="c1"># Default figure size to use throughout</span>
</span></span><span class="line"><span class="ln">25</span><span class="cl"><span class="n">figure_size</span> <span class="o">=</span> <span class="p">(</span><span class="mi">7</span><span class="p">,</span> <span class="mi">7</span> <span class="o">/</span> <span class="n">golden_ratio</span><span class="p">)</span></span></span></code></pre></div><h3 id="33-plotting-the-cie-2-color-space">3.3. Plotting the CIE (2°) color space</h3>
<p>Now that we have our tools in place, let&rsquo;s create our first color plot. One thing that I like very much about the <code>colour-science</code> library is that it provides handy functions for plotting color spaces according to different colorimetric systems.</p>
<p>We&rsquo;re going to use the <code>plot_chromaticity_diagram_CIE1931</code> function to show the CIE color space for a 2° observer. This is like a map of all the colors humans can see within a small area of the eye. The CIE color space is a triangle where the corners represent pure red, green, and blue. Any color can be plotted somewhere inside this triangle by mixing different amounts of these primary colors.</p>
<p>By plotting this color space, we can get a better feel for the colors we can perceive and compare different colors to see how similar or different they are. We&rsquo;ll use it later to analyze colors and create a color model.</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln">26</span><span class="cl"><span class="c1"># Instantiate figure and axes</span>
</span></span><span class="line"><span class="ln">27</span><span class="cl"><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span> <span class="mi">7</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">28</span><span class="cl">
</span></span><span class="line"><span class="ln">29</span><span class="cl"><span class="c1"># Plot CIE color space for a 2°</span>
</span></span><span class="line hl"><span class="ln">30</span><span class="cl"><span class="n">cl</span><span class="o">.</span><span class="n">plotting</span><span class="o">.</span><span class="n">plot_chromaticity_diagram_CIE1931</span><span class="p">(</span>
</span></span><span class="line hl"><span class="ln">31</span><span class="cl">    <span class="n">cmfs</span><span class="o">=</span><span class="s2">&#34;CIE 1931 2 Degree Standard Observer&#34;</span><span class="p">,</span>
</span></span><span class="line hl"><span class="ln">32</span><span class="cl">    <span class="n">axes</span><span class="o">=</span><span class="n">ax</span><span class="p">,</span>
</span></span><span class="line hl"><span class="ln">33</span><span class="cl">    <span class="n">show</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span>
</span></span><span class="line hl"><span class="ln">34</span><span class="cl">    <span class="n">title</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span>
</span></span><span class="line hl"><span class="ln">35</span><span class="cl">    <span class="n">spectral_locus_colours</span><span class="o">=</span><span class="s2">&#34;white&#34;</span><span class="p">,</span>
</span></span><span class="line hl"><span class="ln">36</span><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="ln">37</span><span class="cl">
</span></span><span class="line"><span class="ln">38</span><span class="cl"><span class="c1"># Axes labels</span>
</span></span><span class="line"><span class="ln">39</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s2">&#34;x (2°)&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">40</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s2">&#34;y (2°)&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">41</span><span class="cl">
</span></span><span class="line"><span class="ln">42</span><span class="cl"><span class="c1"># Axes limits</span>
</span></span><span class="line"><span class="ln">43</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">set_xlim</span><span class="p">(</span><span class="o">-</span><span class="mf">0.1</span><span class="p">,</span> <span class="mf">0.85</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">44</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">set_ylim</span><span class="p">(</span><span class="o">-</span><span class="mf">0.1</span><span class="p">,</span> <span class="mf">0.95</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">45</span><span class="cl">
</span></span><span class="line"><span class="ln">46</span><span class="cl"><span class="c1"># Ticks separation</span>
</span></span><span class="line"><span class="ln">47</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">xaxis</span><span class="o">.</span><span class="n">set_major_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mf">0.1</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">48</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">xaxis</span><span class="o">.</span><span class="n">set_minor_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mf">0.01</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">49</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_major_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mf">0.1</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">50</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_minor_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mf">0.01</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">51</span><span class="cl">
</span></span><span class="line"><span class="ln">52</span><span class="cl"><span class="c1"># Grid settings</span>
</span></span><span class="line"><span class="ln">53</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">grid</span><span class="p">(</span><span class="n">which</span><span class="o">=</span><span class="s2">&#34;major&#34;</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="s2">&#34;both&#34;</span><span class="p">,</span> <span class="n">linestyle</span><span class="o">=</span><span class="s2">&#34;--&#34;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s2">&#34;gray&#34;</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.8</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">54</span><span class="cl">
</span></span><span class="line"><span class="ln">55</span><span class="cl"><span class="c1"># Padding adjustment</span>
</span></span><span class="line"><span class="ln">56</span><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">tight_layout</span><span class="p">()</span>
</span></span><span class="line"><span class="ln">57</span><span class="cl">
</span></span><span class="line"><span class="ln">58</span><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span></span></span></code></pre></div><figure>
    <img src="img/CIE_2deg_color_space.png" alt="CIE color space for a 2° observer."><figcaption class="md-figure-caption">CIE color space for a 2° observer.</figcaption></figure><h3 id="34-importing-and-scaling-data">3.4. Importing and scaling data</h3>
<p>Let&rsquo;s see if we can calculate the actual color of some interesting molecules! In this example, we&rsquo;ll determine the colors of Chlorophyll A and Chlorophyll B in solution, two pigments essential for photosynthesis in plants. The data used here consists of pre-recorded UV-Vis spectra for Chlorophyll A and B in both 70% and 90% acetone solutions, obtained from a scientific publication.<sup>6</sup> You can download the <code>.csv</code> file containing this data <a href="/blog/cie-colors-python/include/chlorophyll_uv_vis.csv">here</a>.</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln">59</span><span class="cl"><span class="n">column_names</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;lambda&#34;</span><span class="p">,</span> <span class="s2">&#34;chl_a_70&#34;</span><span class="p">,</span> <span class="s2">&#34;chl_a_90&#34;</span><span class="p">,</span> <span class="s2">&#34;chl_b_70&#34;</span><span class="p">,</span> <span class="s2">&#34;chl_b_90&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="ln">60</span><span class="cl"><span class="n">measured_samples</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span>
</span></span><span class="line"><span class="ln">61</span><span class="cl">    <span class="s2">&#34;chlorophyll_uv_vis.csv&#34;</span><span class="p">,</span> <span class="n">names</span><span class="o">=</span><span class="n">column_names</span><span class="p">,</span> <span class="n">header</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">index_col</span><span class="o">=</span><span class="s2">&#34;lambda&#34;</span>
</span></span><span class="line"><span class="ln">62</span><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="ln">63</span><span class="cl"><span class="n">measured_samples</span></span></span></code></pre></div><table class="styled-table">
    <thead>
        <tr>
            <th style="text-align: left"></th>
            <th style="text-align: left"><strong>chl_a_70</strong></th>
            <th style="text-align: left"><strong>chl_a_90</strong></th>
            <th style="text-align: left"><strong>chl_b_70</strong></th>
            <th style="text-align: left"><strong>chl_b_90</strong></th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td style="text-align: left"><strong>lambda</strong></td>
            <td style="text-align: left"></td>
            <td style="text-align: left"></td>
            <td style="text-align: left"></td>
            <td style="text-align: left"></td>
        </tr>
        <tr>
            <td style="text-align: left">350.0</td>
            <td style="text-align: left">26132.0</td>
            <td style="text-align: left">25552.0</td>
            <td style="text-align: left">29529.0</td>
            <td style="text-align: left">28301.0</td>
        </tr>
        <tr>
            <td style="text-align: left">350.4</td>
            <td style="text-align: left">26251.0</td>
            <td style="text-align: left">25804.0</td>
            <td style="text-align: left">29574.0</td>
            <td style="text-align: left">28114.0</td>
        </tr>
        <tr>
            <td style="text-align: left">350.8</td>
            <td style="text-align: left">26666.0</td>
            <td style="text-align: left">26083.0</td>
            <td style="text-align: left">29350.0</td>
            <td style="text-align: left">27946.0</td>
        </tr>
        <tr>
            <td style="text-align: left">351.2</td>
            <td style="text-align: left">26703.0</td>
            <td style="text-align: left">26227.0</td>
            <td style="text-align: left">29084.0</td>
            <td style="text-align: left">27660.0</td>
        </tr>
        <tr>
            <td style="text-align: left">351.6</td>
            <td style="text-align: left">26834.0</td>
            <td style="text-align: left">26473.0</td>
            <td style="text-align: left">28991.0</td>
            <td style="text-align: left">27632.0</td>
        </tr>
        <tr>
            <td style="text-align: left">&hellip;</td>
            <td style="text-align: left">&hellip;</td>
            <td style="text-align: left">&hellip;</td>
            <td style="text-align: left">&hellip;</td>
            <td style="text-align: left">&hellip;</td>
        </tr>
        <tr>
            <td style="text-align: left">748.4</td>
            <td style="text-align: left">-63.0</td>
            <td style="text-align: left">-269.0</td>
            <td style="text-align: left">-15.0</td>
            <td style="text-align: left">-159.0</td>
        </tr>
        <tr>
            <td style="text-align: left">748.8</td>
            <td style="text-align: left">-80.0</td>
            <td style="text-align: left">-289.0</td>
            <td style="text-align: left">-2.0</td>
            <td style="text-align: left">-141.0</td>
        </tr>
        <tr>
            <td style="text-align: left">749.2</td>
            <td style="text-align: left">-95.0</td>
            <td style="text-align: left">-283.0</td>
            <td style="text-align: left">-13.0</td>
            <td style="text-align: left">-157.0</td>
        </tr>
        <tr>
            <td style="text-align: left">749.6</td>
            <td style="text-align: left">-92.0</td>
            <td style="text-align: left">-292.0</td>
            <td style="text-align: left">-2.0</td>
            <td style="text-align: left">-150.0</td>
        </tr>
        <tr>
            <td style="text-align: left">750.0</td>
            <td style="text-align: left">82.0</td>
            <td style="text-align: left">-198.0</td>
            <td style="text-align: left">69.0</td>
            <td style="text-align: left">-172.0</td>
        </tr>
    </tbody>
</table><p><em>1001 rows × 4 columns</em></p>
<p>The imported data represents the absorbance (\(A\)) of each chlorophyll type, which is measured at regular intervals of light (lambda). In simpler terms, absorbance indicates the amount of light absorbed by a specific molecule at a particular wavelength. Let&rsquo;s take a quick look at these spectra:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln">60</span><span class="cl"><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="n">figure_size</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">61</span><span class="cl">
</span></span><span class="line"><span class="ln">62</span><span class="cl"><span class="c1"># Define the labels for the plot&#39;s legend</span>
</span></span><span class="line"><span class="ln">63</span><span class="cl"><span class="n">chl_labels</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="ln">64</span><span class="cl">    <span class="s2">&#34;Chlorophyll A (70 % Acetone)&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">65</span><span class="cl">    <span class="s2">&#34;Chlorophyll A (90 % Acetone)&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">66</span><span class="cl">    <span class="s2">&#34;Chlorophyll B (70 % Acetone)&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">67</span><span class="cl">    <span class="s2">&#34;Chlorophyll B (90 % Acetone)&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">68</span><span class="cl"><span class="p">]</span>
</span></span><span class="line"><span class="ln">69</span><span class="cl">
</span></span><span class="line"><span class="ln">70</span><span class="cl"><span class="c1"># Iterate over dataframe and plot each spectrum</span>
</span></span><span class="line hl"><span class="ln">71</span><span class="cl"><span class="k">for</span> <span class="n">col</span><span class="p">,</span> <span class="n">sample_label</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">measured_samples</span><span class="o">.</span><span class="n">columns</span><span class="p">,</span> <span class="n">chl_labels</span><span class="p">):</span>
</span></span><span class="line hl"><span class="ln">72</span><span class="cl">    <span class="n">ax</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">measured_samples</span><span class="o">.</span><span class="n">index</span><span class="p">,</span>
</span></span><span class="line hl"><span class="ln">73</span><span class="cl">            <span class="n">measured_samples</span><span class="p">[</span><span class="n">col</span><span class="p">],</span>
</span></span><span class="line hl"><span class="ln">74</span><span class="cl">            <span class="n">label</span><span class="o">=</span><span class="n">sample_label</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">75</span><span class="cl">
</span></span><span class="line"><span class="ln">76</span><span class="cl"><span class="c1"># Ticks separation</span>
</span></span><span class="line"><span class="ln">77</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">xaxis</span><span class="o">.</span><span class="n">set_major_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mi">50</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">78</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">xaxis</span><span class="o">.</span><span class="n">set_minor_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mi">10</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">79</span><span class="cl">
</span></span><span class="line"><span class="ln">80</span><span class="cl"><span class="c1"># Axes labels</span>
</span></span><span class="line"><span class="ln">81</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s2">&#34;Wavelength [nm]&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">82</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s2">&#34;Absorbance [a.u.]&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">83</span><span class="cl">
</span></span><span class="line"><span class="ln">84</span><span class="cl"><span class="c1"># Display legend</span>
</span></span><span class="line"><span class="ln">85</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">legend</span><span class="p">()</span>
</span></span><span class="line"><span class="ln">86</span><span class="cl">
</span></span><span class="line"><span class="ln">87</span><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span></span></span></code></pre></div><figure>
    <img src="img/chl_a_b_UV_Vis_abs.png" alt="UV-Vis absorption spectra of Chlorophyll A and B in 70% and 90 % acetone solutions."><figcaption class="md-figure-caption">UV-Vis absorption spectra of Chlorophyll A and B in 70% and 90 % acetone solutions.</figcaption></figure><p>From this initial inspection, we can see that Chlorophyll A absorbs light primarily in the blue and red regions of the spectrum, corresponding to the peaks at around 430 nm and 670 nm. Chlorophyll B also absorbs light in the blue and red regions, with peaks near 460 nm and 650 nm, but its absorption peak in the blue region is slightly shifted towards the green compared to chlorophyll A.</p>
<p>Additionally, the concentration of acetone in the solution seems to influence the peak intensities. While the overall spectral shapes remain consistent for each chlorophyll type, the intensity variations likely affect their perceived colors.</p>
<p>The current spectra also have significantly different absolute absorbance values. Therefore, some data pre-processing is required before calculating color. To enable meaningful comparisons, we need to normalize the data. This normalization will change the original absorbance values, which might be a disadvantage for <em>quantitative</em> analyses (e.g., concentration determination). However, since our focus here is <em>qualitative</em> (comparing spectra), these intensity scale differences would not provide an effective comparison.</p>
<p>The simplest approach for this is to normalize the spectra, transforming them into a range between 0 and 1 while preserving their overall shapes. We&rsquo;ll use a technique called range scaling (also known as MinMax scaling), described by the following equation:<sup>7</sup></p>
$$
    x_{scaled} = \frac{x - x_{min}}{x_{max} - x_{min}} \tag{6}
$$<p>Here, \(x\) represents a single measured value, \(x_{min}\)​ and \(x_{max}\)​ represent the minimum and maximum values within the spectrum, respectively, and \(x_{scaled}\) represents the resulting normalized value.</p>
<p>While the <code>scikit-learn</code> library offers built-in functions for this task (see <a href="https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.MinMaxScaler.html">here</a>), I prefer to avoid introducing unnecessary dependencies for a simple function. Therefore, we&rsquo;ll define a custom function named normalize to perform the MinMax scaling:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln">86</span><span class="cl"><span class="k">def</span> <span class="nf">normalize</span><span class="p">(</span><span class="n">x</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span> <span class="o">|</span> <span class="n">np</span><span class="o">.</span><span class="n">ndarray</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span> <span class="o">|</span> <span class="n">np</span><span class="o">.</span><span class="n">ndarray</span><span class="p">:</span>
</span></span><span class="line"><span class="ln">87</span><span class="cl">    <span class="s2">&#34;&#34;&#34;MinMax scaling from 0 to 1
</span></span></span><span class="line"><span class="ln">88</span><span class="cl"><span class="s2">
</span></span></span><span class="line"><span class="ln">89</span><span class="cl"><span class="s2">    Args:
</span></span></span><span class="line"><span class="ln">90</span><span class="cl"><span class="s2">        x (pd.Series | np.ndarray): series or array to normalize
</span></span></span><span class="line"><span class="ln">91</span><span class="cl"><span class="s2">
</span></span></span><span class="line"><span class="ln">92</span><span class="cl"><span class="s2">    Returns:
</span></span></span><span class="line"><span class="ln">93</span><span class="cl"><span class="s2">        pd.Series | np.ndarray: series or array of normalized values
</span></span></span><span class="line"><span class="ln">94</span><span class="cl"><span class="s2">    &#34;&#34;&#34;</span>
</span></span><span class="line"><span class="ln">95</span><span class="cl">    <span class="n">x_scaled</span> <span class="o">=</span> <span class="p">(</span><span class="n">x</span> <span class="o">-</span> <span class="n">x</span><span class="o">.</span><span class="n">min</span><span class="p">())</span> <span class="o">/</span> <span class="p">(</span><span class="n">x</span><span class="o">.</span><span class="n">max</span><span class="p">()</span> <span class="o">-</span> <span class="n">x</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
</span></span><span class="line"><span class="ln">96</span><span class="cl">    <span class="k">return</span> <span class="n">x_scaled</span></span></span></code></pre></div><p>This function takes a pandas Series or NumPy array (<code>x</code>) as input and performs the MinMax scaling operation. It subtracts the minimum value (<code>x.min()</code>) from each element in <code>x</code> and then divides the result by the difference between the maximum (<code>x.max()</code>) and minimum values. This ensures all values in the output (<code>x_scaled</code>) fall within the range of 0 to 1.</p>
<p>Now, we can leverage vectorization to efficiently apply the <code>normalize</code> function to the entire DataFrame containing the absorbance values. This will create a new DataFrame with the normalized values, stored in the variable <code>abs_norm</code>:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln">97</span><span class="cl"><span class="n">abs_norm</span> <span class="o">=</span> <span class="n">normalize</span><span class="p">(</span><span class="n">measured_samples</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">98</span><span class="cl"><span class="n">abs_norm</span></span></span></code></pre></div><table class="styled-table">
    <thead>
        <tr>
            <th style="text-align: left"></th>
            <th style="text-align: left"><strong>chl_a_70</strong></th>
            <th style="text-align: left"><strong>chl_a_90</strong></th>
            <th style="text-align: left"><strong>chl_b_70</strong></th>
            <th style="text-align: left"><strong>chl_b_90</strong></th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td style="text-align: left"><strong>lambda</strong></td>
            <td style="text-align: left"></td>
            <td style="text-align: left"></td>
            <td style="text-align: left"></td>
            <td style="text-align: left"></td>
        </tr>
        <tr>
            <td style="text-align: left">350.0</td>
            <td style="text-align: left">0.324398</td>
            <td style="text-align: left">0.285405</td>
            <td style="text-align: left">0.227556</td>
            <td style="text-align: left">0.207087</td>
        </tr>
        <tr>
            <td style="text-align: left">350.4</td>
            <td style="text-align: left">0.325869</td>
            <td style="text-align: left">0.288188</td>
            <td style="text-align: left">0.227903</td>
            <td style="text-align: left">0.205727</td>
        </tr>
        <tr>
            <td style="text-align: left">350.8</td>
            <td style="text-align: left">0.331001</td>
            <td style="text-align: left">0.291269</td>
            <td style="text-align: left">0.226179</td>
            <td style="text-align: left">0.204505</td>
        </tr>
        <tr>
            <td style="text-align: left">351.2</td>
            <td style="text-align: left">0.331458</td>
            <td style="text-align: left">0.292859</td>
            <td style="text-align: left">0.224133</td>
            <td style="text-align: left">0.202425</td>
        </tr>
        <tr>
            <td style="text-align: left">351.6</td>
            <td style="text-align: left">0.333078</td>
            <td style="text-align: left">0.295576</td>
            <td style="text-align: left">0.223417</td>
            <td style="text-align: left">0.202221</td>
        </tr>
        <tr>
            <td style="text-align: left">&hellip;</td>
            <td style="text-align: left">&hellip;</td>
            <td style="text-align: left">&hellip;</td>
            <td style="text-align: left">&hellip;</td>
            <td style="text-align: left">&hellip;</td>
        </tr>
        <tr>
            <td style="text-align: left">748.4</td>
            <td style="text-align: left">0.000507</td>
            <td style="text-align: left">0.000254</td>
            <td style="text-align: left">0.000262</td>
            <td style="text-align: left">0.000095</td>
        </tr>
        <tr>
            <td style="text-align: left">748.8</td>
            <td style="text-align: left">0.000297</td>
            <td style="text-align: left">0.000033</td>
            <td style="text-align: left">0.000362</td>
            <td style="text-align: left">0.000225</td>
        </tr>
        <tr>
            <td style="text-align: left">749.2</td>
            <td style="text-align: left">0.000111</td>
            <td style="text-align: left">0.000099</td>
            <td style="text-align: left">0.000277</td>
            <td style="text-align: left">0.000109</td>
        </tr>
        <tr>
            <td style="text-align: left">749.6</td>
            <td style="text-align: left">0.000148</td>
            <td style="text-align: left">0.000000</td>
            <td style="text-align: left">0.000362</td>
            <td style="text-align: left">0.000160</td>
        </tr>
        <tr>
            <td style="text-align: left">750.0</td>
            <td style="text-align: left">0.002300</td>
            <td style="text-align: left">0.001038</td>
            <td style="text-align: left">0.000908</td>
            <td style="text-align: left">0.000000</td>
        </tr>
    </tbody>
</table><p><em>1001 rows × 4 columns</em></p>
<p>The resulting DataFrame (<code>abs_norm</code>) now has absorbance values between 0 and 1, which can be verified by plotting them:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln"> 99</span><span class="cl"><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="n">figure_size</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">100</span><span class="cl">
</span></span><span class="line"><span class="ln">101</span><span class="cl"><span class="k">for</span> <span class="n">col</span><span class="p">,</span> <span class="n">sample_label</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">abs_norm</span><span class="o">.</span><span class="n">columns</span><span class="p">,</span> <span class="n">chl_labels</span><span class="p">):</span>
</span></span><span class="line"><span class="ln">102</span><span class="cl">    <span class="n">ax</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">abs_norm</span><span class="o">.</span><span class="n">index</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">103</span><span class="cl">            <span class="n">normalize</span><span class="p">(</span><span class="n">abs_norm</span><span class="p">[</span><span class="n">col</span><span class="p">]),</span>
</span></span><span class="line"><span class="ln">104</span><span class="cl">            <span class="n">label</span><span class="o">=</span><span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span><span class="n">sample_label</span><span class="si">}</span><span class="s2"> norm&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">105</span><span class="cl">
</span></span><span class="line"><span class="ln">106</span><span class="cl"><span class="c1"># Ticks separation</span>
</span></span><span class="line"><span class="ln">107</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">xaxis</span><span class="o">.</span><span class="n">set_major_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mi">50</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">108</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">xaxis</span><span class="o">.</span><span class="n">set_minor_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mi">10</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">109</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_major_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mf">0.1</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">110</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_minor_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mf">0.025</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">111</span><span class="cl">
</span></span><span class="line"><span class="ln">112</span><span class="cl"><span class="c1"># Axes labels</span>
</span></span><span class="line"><span class="ln">113</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s2">&#34;Wavelength [nm]&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">114</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s2">&#34;Absorbance [a.u.]&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">115</span><span class="cl">
</span></span><span class="line"><span class="ln">116</span><span class="cl"><span class="c1"># Display legend</span>
</span></span><span class="line"><span class="ln">117</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">legend</span><span class="p">()</span>
</span></span><span class="line"><span class="ln">118</span><span class="cl">
</span></span><span class="line"><span class="ln">119</span><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span></span></span></code></pre></div><figure>
    <img src="img/chl_a_b_UV_Vis_abs_norm.png" alt="Normalized UV-Vis absorption spectra of Chlorophyll A and B in 70% and 90 % acetone solutions."><figcaption class="md-figure-caption">Normalized UV-Vis absorption spectra of Chlorophyll A and B in 70% and 90 % acetone solutions.</figcaption></figure><h3 id="35-converting-absorbance-to-transmittance">3.5. Converting absorbance to transmittance</h3>
<p>Before calculating the colors from our spectra, it&rsquo;s important to remember that these spectra represent the <strong>light absorbed</strong> by the molecules. To determine the color we actually perceive, we need to convert absorbance to <strong>transmittance</strong>. Transmittance represents the light that passes through the molecules and reaches our eyes.</p>
<p>The conversion from absorbance (\(A\)) to transmittance (\(T\)) is straightforward and follows this equation:</p>
$$
    T = 10^{(2 - A)} \tag{7}
$$<p>Using the normalized absorbance values, we can easily perform this conversion by defining the <code>abs_to_trans</code> function:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln">120</span><span class="cl"><span class="k">def</span> <span class="nf">abs_to_trans</span><span class="p">(</span><span class="n">A</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span> <span class="o">|</span> <span class="n">np</span><span class="o">.</span><span class="n">ndarray</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span> <span class="o">|</span> <span class="n">np</span><span class="o">.</span><span class="n">ndarray</span><span class="p">:</span>
</span></span><span class="line"><span class="ln">121</span><span class="cl">    <span class="s2">&#34;&#34;&#34;Convert absorbance to transmittance
</span></span></span><span class="line"><span class="ln">122</span><span class="cl"><span class="s2">
</span></span></span><span class="line"><span class="ln">123</span><span class="cl"><span class="s2">    Args:
</span></span></span><span class="line"><span class="ln">124</span><span class="cl"><span class="s2">        A (pd.Series | np.ndarray): series or array of absorbance values
</span></span></span><span class="line"><span class="ln">125</span><span class="cl"><span class="s2">
</span></span></span><span class="line"><span class="ln">126</span><span class="cl"><span class="s2">    Returns:
</span></span></span><span class="line"><span class="ln">127</span><span class="cl"><span class="s2">        pd.Series | np.ndarray: series or array of transmittance values
</span></span></span><span class="line"><span class="ln">128</span><span class="cl"><span class="s2">    &#34;&#34;&#34;</span>
</span></span><span class="line"><span class="ln">129</span><span class="cl">    <span class="n">T</span> <span class="o">=</span> <span class="mi">10</span> <span class="o">**</span> <span class="p">(</span><span class="mi">2</span> <span class="o">-</span> <span class="n">A</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">130</span><span class="cl">    <span class="k">return</span> <span class="n">T</span></span></span></code></pre></div><p>This function takes a Series or array of absorbance values as input and returns a Series or array of corresponding transmittance values.</p>
<p>Now, we can apply this function to the entire <code>abs_norm</code> DataFrame to efficiently calculate the transmittance for each spectrum. This will create a new DataFrame (<code>transm_norm</code>) containing the normalized transmittance values for each chlorophyll sample.</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln">131</span><span class="cl"><span class="n">transm_norm</span> <span class="o">=</span> <span class="n">abs_to_trans</span><span class="p">(</span><span class="n">abs_norm</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">132</span><span class="cl"><span class="n">transm_norm</span></span></span></code></pre></div><table class="styled-table">
    <thead>
        <tr>
            <th style="text-align: left"></th>
            <th style="text-align: left"><strong>chl_a_70</strong></th>
            <th style="text-align: left"><strong>chl_a_90</strong></th>
            <th style="text-align: left"><strong>chl_b_70</strong></th>
            <th style="text-align: left"><strong>chl_b_90</strong></th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td style="text-align: left"><strong>lambda</strong></td>
            <td style="text-align: left"></td>
            <td style="text-align: left"></td>
            <td style="text-align: left"></td>
            <td style="text-align: left"></td>
        </tr>
        <tr>
            <td style="text-align: left">350.0</td>
            <td style="text-align: left">47.380775</td>
            <td style="text-align: left">51.831637</td>
            <td style="text-align: left">59.216627</td>
            <td style="text-align: left">62.074481</td>
        </tr>
        <tr>
            <td style="text-align: left">350.4</td>
            <td style="text-align: left">47.220520</td>
            <td style="text-align: left">51.500565</td>
            <td style="text-align: left">59.169440</td>
            <td style="text-align: left">62.269182</td>
        </tr>
        <tr>
            <td style="text-align: left">350.8</td>
            <td style="text-align: left">46.665880</td>
            <td style="text-align: left">51.136488</td>
            <td style="text-align: left">59.404698</td>
            <td style="text-align: left">62.444622</td>
        </tr>
        <tr>
            <td style="text-align: left">351.2</td>
            <td style="text-align: left">46.616747</td>
            <td style="text-align: left">50.949585</td>
            <td style="text-align: left">59.685281</td>
            <td style="text-align: left">62.744426</td>
        </tr>
        <tr>
            <td style="text-align: left">351.6</td>
            <td style="text-align: left">46.443207</td>
            <td style="text-align: left">50.631871</td>
            <td style="text-align: left">59.783692</td>
            <td style="text-align: left">62.773854</td>
        </tr>
        <tr>
            <td style="text-align: left">&hellip;</td>
            <td style="text-align: left">&hellip;</td>
            <td style="text-align: left">&hellip;</td>
            <td style="text-align: left">&hellip;</td>
            <td style="text-align: left">&hellip;</td>
        </tr>
        <tr>
            <td style="text-align: left">748.4</td>
            <td style="text-align: left">99.883339</td>
            <td style="text-align: left">99.941532</td>
            <td style="text-align: left">99.939788</td>
            <td style="text-align: left">99.978231</td>
        </tr>
        <tr>
            <td style="text-align: left">748.8</td>
            <td style="text-align: left">99.931694</td>
            <td style="text-align: left">99.992372</td>
            <td style="text-align: left">99.916775</td>
            <td style="text-align: left">99.948098</td>
        </tr>
        <tr>
            <td style="text-align: left">749.2</td>
            <td style="text-align: left">99.974380</td>
            <td style="text-align: left">99.977117</td>
            <td style="text-align: left">99.936247</td>
            <td style="text-align: left">99.974883</td>
        </tr>
        <tr>
            <td style="text-align: left">749.6</td>
            <td style="text-align: left">99.965841</td>
            <td style="text-align: left">100.000000</td>
            <td style="text-align: left">99.916775</td>
            <td style="text-align: left">99.963164</td>
        </tr>
        <tr>
            <td style="text-align: left">750.0</td>
            <td style="text-align: left">99.471847</td>
            <td style="text-align: left">99.761259</td>
            <td style="text-align: left">99.791184</td>
            <td style="text-align: left">100.000000</td>
        </tr>
    </tbody>
</table><p><em>1001 rows × 4 columns</em></p>
<p>Let&rsquo;s verify that the conversion to transmittance worked as expected by plotting the new values:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln">133</span><span class="cl"><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="n">figure_size</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">134</span><span class="cl">
</span></span><span class="line hl"><span class="ln">135</span><span class="cl"><span class="k">for</span> <span class="n">col</span><span class="p">,</span> <span class="n">sample_label</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">transm_norm</span><span class="o">.</span><span class="n">columns</span><span class="p">,</span> <span class="n">chl_labels</span><span class="p">):</span>
</span></span><span class="line hl"><span class="ln">136</span><span class="cl">    <span class="n">ax</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">transm_norm</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="n">transm_norm</span><span class="p">[</span><span class="n">col</span><span class="p">],</span> <span class="n">label</span><span class="o">=</span><span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span><span class="n">sample_label</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">137</span><span class="cl">
</span></span><span class="line"><span class="ln">138</span><span class="cl"><span class="c1"># Ticks separation</span>
</span></span><span class="line"><span class="ln">139</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">xaxis</span><span class="o">.</span><span class="n">set_major_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mi">50</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">140</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">xaxis</span><span class="o">.</span><span class="n">set_minor_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mi">10</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">141</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_major_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mi">10</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">142</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_minor_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mi">5</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">143</span><span class="cl">
</span></span><span class="line"><span class="ln">144</span><span class="cl"><span class="c1"># Axes labels</span>
</span></span><span class="line"><span class="ln">145</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s2">&#34;Wavelength [nm]&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">146</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s2">&#34;Transmittance [%]&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">147</span><span class="cl">
</span></span><span class="line"><span class="ln">148</span><span class="cl"><span class="c1"># Display legend</span>
</span></span><span class="line"><span class="ln">149</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">legend</span><span class="p">()</span>
</span></span><span class="line"><span class="ln">150</span><span class="cl">
</span></span><span class="line"><span class="ln">151</span><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span></span></span></code></pre></div><figure>
    <img src="img/chl_a_b_UV_Vis_trans_norm.png" alt="Normalized UV-Vis transmission spectra of Chlorophyll A and B in 70% and 90 % acetone solutions."><figcaption class="md-figure-caption">Normalized UV-Vis transmission spectra of Chlorophyll A and B in 70% and 90 % acetone solutions.</figcaption></figure><p>As expected, the normalized transmittance values range between 0 and 1 (or 0% and 100% transmittance). We can see the inverse relationship between absorbance and transmittance: higher absorbance corresponds to lower transmittance, and vice versa. For a more direct comparison, we can visualize both absorbance and transmittance in a single plot.</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln">152</span><span class="cl"><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">sharex</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="n">figure_size</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">153</span><span class="cl">
</span></span><span class="line"><span class="ln">154</span><span class="cl"><span class="c1"># Iterate over absorbance dataframe</span>
</span></span><span class="line hl"><span class="ln">155</span><span class="cl"><span class="k">for</span> <span class="n">col</span><span class="p">,</span> <span class="n">sample_label</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">abs_norm</span><span class="o">.</span><span class="n">columns</span><span class="p">,</span> <span class="n">chl_labels</span><span class="p">):</span>
</span></span><span class="line hl"><span class="ln">156</span><span class="cl">    <span class="n">ax</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">abs_norm</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="n">normalize</span><span class="p">(</span><span class="n">abs_norm</span><span class="p">[</span><span class="n">col</span><span class="p">]),</span> <span class="n">label</span><span class="o">=</span><span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span><span class="n">sample_label</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">157</span><span class="cl">
</span></span><span class="line"><span class="ln">158</span><span class="cl"><span class="c1"># Iterate over transmittance dataframe</span>
</span></span><span class="line hl"><span class="ln">159</span><span class="cl"><span class="k">for</span> <span class="n">col</span><span class="p">,</span> <span class="n">sample_label</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">transm_norm</span><span class="o">.</span><span class="n">columns</span><span class="p">,</span> <span class="n">chl_labels</span><span class="p">):</span>
</span></span><span class="line hl"><span class="ln">160</span><span class="cl">    <span class="n">ax</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">transm_norm</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="n">transm_norm</span><span class="p">[</span><span class="n">col</span><span class="p">],</span> <span class="n">label</span><span class="o">=</span><span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span><span class="n">sample_label</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">161</span><span class="cl">
</span></span><span class="line"><span class="ln">162</span><span class="cl"><span class="c1"># Axes labels</span>
</span></span><span class="line"><span class="ln">163</span><span class="cl"><span class="n">ax</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s2">&#34;Absorbance [a.u.]&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">164</span><span class="cl">
</span></span><span class="line"><span class="ln">165</span><span class="cl"><span class="n">ax</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s2">&#34;Wavelength [nm]&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">166</span><span class="cl"><span class="n">ax</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s2">&#34;Transmittance [%]&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">167</span><span class="cl">
</span></span><span class="line"><span class="ln">168</span><span class="cl"><span class="c1"># Ticks separation</span>
</span></span><span class="line"><span class="ln">169</span><span class="cl"><span class="k">for</span> <span class="n">axis</span> <span class="ow">in</span> <span class="n">ax</span><span class="p">:</span>
</span></span><span class="line"><span class="ln">170</span><span class="cl">    <span class="n">axis</span><span class="o">.</span><span class="n">xaxis</span><span class="o">.</span><span class="n">set_major_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mi">50</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">171</span><span class="cl">    <span class="n">axis</span><span class="o">.</span><span class="n">xaxis</span><span class="o">.</span><span class="n">set_minor_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mi">10</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">172</span><span class="cl">    <span class="c1"># Display legend</span>
</span></span><span class="line"><span class="ln">173</span><span class="cl">    <span class="n">axis</span><span class="o">.</span><span class="n">legend</span><span class="p">()</span>
</span></span><span class="line"><span class="ln">174</span><span class="cl">
</span></span><span class="line"><span class="ln">175</span><span class="cl"><span class="n">ax</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_major_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mf">0.1</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">176</span><span class="cl"><span class="n">ax</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_minor_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mf">0.025</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">177</span><span class="cl"><span class="n">ax</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_major_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mi">10</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">178</span><span class="cl"><span class="n">ax</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_minor_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mi">5</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">179</span><span class="cl">
</span></span><span class="line"><span class="ln">180</span><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span></span></span></code></pre></div><figure>
    <img src="img/chl_a_b_UV_Vis_abs_trans_norm.png" alt="Normalized UV-Vis absorption and transmission spectra of Chlorophyll A and B in 70% and 90 % acetone solutions."><figcaption class="md-figure-caption">Normalized UV-Vis absorption and transmission spectra of Chlorophyll A and B in 70% and 90 % acetone solutions.</figcaption></figure><h3 id="36-calculating-the-cie-colors">3.6. Calculating the CIE colors</h3>
<p>Now that we have the normalized absorbance and transmittance spectra, we can finally calculate the corresponding CIE colors. To do this, we need to do the following:</p>
<ul>
<li><strong>Select the color matching functions:</strong> We&rsquo;ll use the CIE 1931 system, specified as <code>cie_2_1931</code> in <code>colour-science</code>.</li>
<li><strong>Select the appropriate illuminant:</strong> Since we&rsquo;re interested in daylight conditions, we&rsquo;ll use the <code>D65</code> illuminant.</li>
<li><strong>Create spectral distributions:</strong> For each spectrum, we&rsquo;ll create a <code>SpectralDistribution</code> object from <code>colour-science</code>. This provides useful methods like <code>interpolate</code>, which is necessary to ensure the spectra conform to CIE specifications (1 nm intervals).</li>
<li><strong>Calculate CIE \(XYZ\) coordinates:</strong> Using the <code>sd_to_XYZ</code> function, we&rsquo;ll compute the CIE XYZ coordinates for each spectrum based on the spectral distribution, color matching functions, and illuminant.</li>
<li>Convert to CIE \(xy\) coordinated: The \(XYZ\) coordinates are then converted to CIE \(xy\) coordinates, which are more convenient for plotting on the color space.</li>
</ul>
<p>This code iterates over each spectrum, calculates the CIE \(XYZ\) coordinates, converts them to \(xy\) coordinates, and stores the results in two lists: <code>chl_abs_clr</code> for the absorbance-based colors and <code>chl_transm_clr</code> for the transmittance-based colors. Finally, the results are merged into a single DataFrame for easier analysis.</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln">181</span><span class="cl"><span class="c1"># Define color matching functions</span>
</span></span><span class="line"><span class="ln">182</span><span class="cl"><span class="n">cmfs</span> <span class="o">=</span> <span class="n">cl</span><span class="o">.</span><span class="n">MSDS_CMFS</span><span class="p">[</span><span class="s2">&#34;cie_2_1931&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="ln">183</span><span class="cl">
</span></span><span class="line"><span class="ln">184</span><span class="cl"><span class="c1"># Define illuminant</span>
</span></span><span class="line"><span class="ln">185</span><span class="cl"><span class="n">illuminant</span> <span class="o">=</span> <span class="n">cl</span><span class="o">.</span><span class="n">SDS_ILLUMINANTS</span><span class="p">[</span><span class="s2">&#34;D65&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="ln">186</span><span class="cl">
</span></span><span class="line"><span class="ln">187</span><span class="cl"><span class="n">chl_abs_clr</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="ln">188</span><span class="cl">
</span></span><span class="line"><span class="ln">189</span><span class="cl"><span class="c1"># Iterate over each normalized absorbance spectrum</span>
</span></span><span class="line"><span class="ln">190</span><span class="cl"><span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">abs_norm</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
</span></span><span class="line"><span class="ln">191</span><span class="cl">    <span class="c1"># Initialize spectral distribution</span>
</span></span><span class="line"><span class="ln">192</span><span class="cl">    <span class="n">sd</span> <span class="o">=</span> <span class="n">cl</span><span class="o">.</span><span class="n">SpectralDistribution</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">abs_norm</span><span class="p">[</span><span class="n">col</span><span class="p">])</span>
</span></span><span class="line"><span class="ln">193</span><span class="cl">
</span></span><span class="line"><span class="ln">194</span><span class="cl">    <span class="c1"># Interpolate sd to conform to the CIE specifications</span>
</span></span><span class="line"><span class="ln">195</span><span class="cl">    <span class="n">sd</span> <span class="o">=</span> <span class="n">sd</span><span class="o">.</span><span class="n">interpolate</span><span class="p">(</span><span class="n">cl</span><span class="o">.</span><span class="n">SpectralShape</span><span class="p">(</span><span class="mi">350</span><span class="p">,</span> <span class="mi">750</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">196</span><span class="cl">
</span></span><span class="line"><span class="ln">197</span><span class="cl">    <span class="c1"># Calculate CIE XYZ coordinates from spectral distribution</span>
</span></span><span class="line"><span class="ln">198</span><span class="cl">    <span class="n">cie_XYZ</span> <span class="o">=</span> <span class="n">cl</span><span class="o">.</span><span class="n">sd_to_XYZ</span><span class="p">(</span><span class="n">sd</span><span class="p">,</span> <span class="n">cmfs</span><span class="p">,</span> <span class="n">illuminant</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">199</span><span class="cl">
</span></span><span class="line"><span class="ln">200</span><span class="cl">    <span class="c1"># Convert to CIE xy coordinates</span>
</span></span><span class="line"><span class="ln">201</span><span class="cl">    <span class="n">cie_xy</span> <span class="o">=</span> <span class="n">cl</span><span class="o">.</span><span class="n">XYZ_to_xy</span><span class="p">(</span><span class="n">cie_XYZ</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">202</span><span class="cl">
</span></span><span class="line"><span class="ln">203</span><span class="cl">    <span class="c1"># Append the results to the list of sample colors</span>
</span></span><span class="line"><span class="ln">204</span><span class="cl">    <span class="n">chl_abs_clr</span><span class="o">.</span><span class="n">append</span><span class="p">(</span>
</span></span><span class="line"><span class="ln">205</span><span class="cl">        <span class="p">{</span><span class="s2">&#34;sample&#34;</span><span class="p">:</span> <span class="n">col</span><span class="p">,</span> <span class="s2">&#34;x_A&#34;</span><span class="p">:</span> <span class="n">np</span><span class="o">.</span><span class="n">round</span><span class="p">(</span><span class="n">cie_xy</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="mi">4</span><span class="p">),</span> <span class="s2">&#34;y_A&#34;</span><span class="p">:</span> <span class="n">np</span><span class="o">.</span><span class="n">round</span><span class="p">(</span><span class="n">cie_xy</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="mi">4</span><span class="p">)}</span>
</span></span><span class="line"><span class="ln">206</span><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="ln">207</span><span class="cl">
</span></span><span class="line"><span class="ln">208</span><span class="cl"><span class="n">chl_transm_clr</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="ln">209</span><span class="cl">
</span></span><span class="line"><span class="ln">210</span><span class="cl"><span class="c1"># Iterate over each normalized transmittance spectrum</span>
</span></span><span class="line"><span class="ln">211</span><span class="cl"><span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">transm_norm</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
</span></span><span class="line"><span class="ln">212</span><span class="cl">    <span class="c1"># Initialize spectral distribution</span>
</span></span><span class="line"><span class="ln">213</span><span class="cl">    <span class="n">sd</span> <span class="o">=</span> <span class="n">cl</span><span class="o">.</span><span class="n">SpectralDistribution</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">transm_norm</span><span class="p">[</span><span class="n">col</span><span class="p">])</span>
</span></span><span class="line"><span class="ln">214</span><span class="cl">    <span class="n">sd</span> <span class="o">=</span> <span class="n">sd</span><span class="o">.</span><span class="n">interpolate</span><span class="p">(</span><span class="n">cl</span><span class="o">.</span><span class="n">SpectralShape</span><span class="p">(</span><span class="mi">350</span><span class="p">,</span> <span class="mi">750</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">215</span><span class="cl">
</span></span><span class="line"><span class="ln">216</span><span class="cl">    <span class="c1"># Calculate CIE XYZ coordinates from spectral distribution</span>
</span></span><span class="line"><span class="ln">217</span><span class="cl">    <span class="n">cie_XYZ</span> <span class="o">=</span> <span class="n">cl</span><span class="o">.</span><span class="n">sd_to_XYZ</span><span class="p">(</span><span class="n">sd</span><span class="p">,</span> <span class="n">cmfs</span><span class="p">,</span> <span class="n">illuminant</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">218</span><span class="cl">
</span></span><span class="line"><span class="ln">219</span><span class="cl">    <span class="c1"># Convert to CIE xy coordinates</span>
</span></span><span class="line"><span class="ln">220</span><span class="cl">    <span class="n">cie_xy</span> <span class="o">=</span> <span class="n">cl</span><span class="o">.</span><span class="n">XYZ_to_xy</span><span class="p">(</span><span class="n">cie_XYZ</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">221</span><span class="cl">
</span></span><span class="line"><span class="ln">222</span><span class="cl">    <span class="c1"># Append the results to the list of sample colors</span>
</span></span><span class="line"><span class="ln">223</span><span class="cl">    <span class="n">chl_transm_clr</span><span class="o">.</span><span class="n">append</span><span class="p">(</span>
</span></span><span class="line"><span class="ln">224</span><span class="cl">        <span class="p">{</span><span class="s2">&#34;sample&#34;</span><span class="p">:</span> <span class="n">col</span><span class="p">,</span> <span class="s2">&#34;x_T&#34;</span><span class="p">:</span> <span class="n">np</span><span class="o">.</span><span class="n">round</span><span class="p">(</span><span class="n">cie_xy</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="mi">4</span><span class="p">),</span> <span class="s2">&#34;y_T&#34;</span><span class="p">:</span> <span class="n">np</span><span class="o">.</span><span class="n">round</span><span class="p">(</span><span class="n">cie_xy</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="mi">4</span><span class="p">)}</span>
</span></span><span class="line"><span class="ln">225</span><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="ln">226</span><span class="cl">
</span></span><span class="line"><span class="ln">227</span><span class="cl"><span class="c1"># Convert dictionaries to dataframes and join them together</span>
</span></span><span class="line"><span class="ln">228</span><span class="cl"><span class="n">colors</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">chl_transm_clr</span><span class="p">),</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">chl_abs_clr</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">229</span><span class="cl"><span class="n">colors</span></span></span></code></pre></div><table class="styled-table">
    <thead>
        <tr>
            <th style="text-align: left"></th>
            <th style="text-align: left"><strong>sample</strong></th>
            <th style="text-align: left"><strong>x_T</strong></th>
            <th style="text-align: left"><strong>y_T</strong></th>
            <th style="text-align: left"><strong>x_A</strong></th>
            <th style="text-align: left"><strong>y_A</strong></th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td style="text-align: left">0</td>
            <td style="text-align: left">chl_a_70</td>
            <td style="text-align: left">0.3046</td>
            <td style="text-align: left">0.3777</td>
            <td style="text-align: left">0.2966</td>
            <td style="text-align: left">0.1330</td>
        </tr>
        <tr>
            <td style="text-align: left">1</td>
            <td style="text-align: left">chl_a_90</td>
            <td style="text-align: left">0.3063</td>
            <td style="text-align: left">0.3721</td>
            <td style="text-align: left">0.2948</td>
            <td style="text-align: left">0.1345</td>
        </tr>
        <tr>
            <td style="text-align: left">2</td>
            <td style="text-align: left">chl_b_70</td>
            <td style="text-align: left">0.3558</td>
            <td style="text-align: left">0.4365</td>
            <td style="text-align: left">0.2036</td>
            <td style="text-align: left">0.0930</td>
        </tr>
        <tr>
            <td style="text-align: left">3</td>
            <td style="text-align: left">chl_b_90</td>
            <td style="text-align: left">0.3538</td>
            <td style="text-align: left">0.4334</td>
            <td style="text-align: left">0.2048</td>
            <td style="text-align: left">0.0904</td>
        </tr>
    </tbody>
</table><h3 id="37-visualizing-colors-on-the-cie-color-space">3.7. Visualizing colors on the CIE color space</h3>
<p>Now that we have the \(x\) and \(y\) values for both absorbed and transmitted colors, let&rsquo;s plot them on the CIE 1931 color space. This code first plots the CIE color space as we have seen <a href="/blog/cie-colors-python/#33-plotting-the-cie-2-color-space">at the beginning</a>. Then, it iterates through the colors DataFrame and plots the absorbed colors (based on the <code>x_A</code> and <code>y_A</code> columns) as scattered points on the color space with corresponding labels, colors, and edge colors.</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln">230</span><span class="cl"><span class="c1"># Instantiate figure and axes</span>
</span></span><span class="line"><span class="ln">231</span><span class="cl"><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="n">figure_size</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">232</span><span class="cl">
</span></span><span class="line"><span class="ln">233</span><span class="cl"><span class="c1"># Plot CIE color space for a 2°</span>
</span></span><span class="line"><span class="ln">234</span><span class="cl"><span class="n">cl</span><span class="o">.</span><span class="n">plotting</span><span class="o">.</span><span class="n">plot_chromaticity_diagram_CIE1931</span><span class="p">(</span>
</span></span><span class="line"><span class="ln">235</span><span class="cl">    <span class="n">cmfs</span><span class="o">=</span><span class="s2">&#34;CIE 1931 2 Degree Standard Observer&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">236</span><span class="cl">    <span class="n">axes</span><span class="o">=</span><span class="n">ax</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">237</span><span class="cl">    <span class="n">show</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">238</span><span class="cl">    <span class="n">title</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">239</span><span class="cl">    <span class="n">spectral_locus_colours</span><span class="o">=</span><span class="s2">&#34;white&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">240</span><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="ln">241</span><span class="cl">
</span></span><span class="line"><span class="ln">242</span><span class="cl"><span class="n">color_list</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;r&#34;</span><span class="p">,</span> <span class="s2">&#34;g&#34;</span><span class="p">,</span> <span class="s2">&#34;b&#34;</span><span class="p">,</span> <span class="s2">&#34;m&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="ln">243</span><span class="cl">
</span></span><span class="line"><span class="ln">244</span><span class="cl"><span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">c</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">color_list</span><span class="p">):</span>
</span></span><span class="line"><span class="ln">245</span><span class="cl">    <span class="n">ax</span><span class="o">.</span><span class="n">scatter</span><span class="p">(</span>
</span></span><span class="line"><span class="ln">246</span><span class="cl">        <span class="n">colors</span><span class="p">[</span><span class="s2">&#34;x_A&#34;</span><span class="p">][</span><span class="n">i</span><span class="p">],</span>
</span></span><span class="line"><span class="ln">247</span><span class="cl">        <span class="n">colors</span><span class="p">[</span><span class="s2">&#34;y_A&#34;</span><span class="p">][</span><span class="n">i</span><span class="p">],</span>
</span></span><span class="line"><span class="ln">248</span><span class="cl">        <span class="n">label</span><span class="o">=</span><span class="n">chl_labels</span><span class="p">[</span><span class="n">i</span><span class="p">],</span>
</span></span><span class="line"><span class="ln">249</span><span class="cl">        <span class="n">color</span><span class="o">=</span><span class="n">c</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">250</span><span class="cl">        <span class="n">edgecolors</span><span class="o">=</span><span class="s2">&#34;k&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">251</span><span class="cl">        <span class="n">alpha</span><span class="o">=</span><span class="mf">0.8</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">252</span><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="ln">253</span><span class="cl">
</span></span><span class="line"><span class="ln">254</span><span class="cl"><span class="c1"># Axes labels</span>
</span></span><span class="line"><span class="ln">255</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s2">&#34;x (2°)&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">256</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s2">&#34;y (2°)&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">257</span><span class="cl">
</span></span><span class="line"><span class="ln">258</span><span class="cl"><span class="c1"># Axes limits</span>
</span></span><span class="line"><span class="ln">259</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">set_xlim</span><span class="p">(</span><span class="mf">0.18</span><span class="p">,</span> <span class="mf">0.32</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">260</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">set_ylim</span><span class="p">(</span><span class="mf">0.06</span><span class="p">,</span> <span class="mf">0.16</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">261</span><span class="cl">
</span></span><span class="line"><span class="ln">262</span><span class="cl"><span class="c1"># Ticks separation</span>
</span></span><span class="line"><span class="ln">263</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">xaxis</span><span class="o">.</span><span class="n">set_major_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mf">0.01</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">264</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">xaxis</span><span class="o">.</span><span class="n">set_minor_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mf">0.005</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">265</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_major_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mf">0.01</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">266</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_minor_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mf">0.005</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">267</span><span class="cl">
</span></span><span class="line"><span class="ln">268</span><span class="cl"><span class="c1"># Grid settings</span>
</span></span><span class="line"><span class="ln">269</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">grid</span><span class="p">(</span><span class="n">which</span><span class="o">=</span><span class="s2">&#34;major&#34;</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="s2">&#34;both&#34;</span><span class="p">,</span> <span class="n">linestyle</span><span class="o">=</span><span class="s2">&#34;--&#34;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s2">&#34;gray&#34;</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.8</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">270</span><span class="cl">
</span></span><span class="line"><span class="ln">271</span><span class="cl"><span class="c1"># Display legend</span>
</span></span><span class="line"><span class="ln">272</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">legend</span><span class="p">()</span>
</span></span><span class="line"><span class="ln">273</span><span class="cl">
</span></span><span class="line"><span class="ln">274</span><span class="cl"><span class="c1"># Adjust plot padding</span>
</span></span><span class="line"><span class="ln">275</span><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">tight_layout</span><span class="p">()</span>
</span></span><span class="line"><span class="ln">276</span><span class="cl">
</span></span><span class="line"><span class="ln">277</span><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span></span></span></code></pre></div><figure>
    <img src="img/CIE_chl_abs.png" alt="CIE color space for a 2° observer and calculated absorbed colors for Chlorophyll A and B in 70 % and 90 % acetone with D65 illuminant."><figcaption class="md-figure-caption">CIE color space for a 2° observer and calculated absorbed colors for Chlorophyll A and B in 70 % and 90 % acetone with D65 illuminant.</figcaption></figure><p>To visualize the transmitted colors, we can reuse most of the existing code and simply modify the data source:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="ln">278</span><span class="cl"><span class="c1"># Instantiate figure and axes</span>
</span></span><span class="line"><span class="ln">279</span><span class="cl"><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="n">figure_size</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">280</span><span class="cl">
</span></span><span class="line"><span class="ln">281</span><span class="cl"><span class="c1"># Plot CIE color space for a 2°</span>
</span></span><span class="line"><span class="ln">282</span><span class="cl"><span class="n">cl</span><span class="o">.</span><span class="n">plotting</span><span class="o">.</span><span class="n">plot_chromaticity_diagram_CIE1931</span><span class="p">(</span>
</span></span><span class="line"><span class="ln">283</span><span class="cl">    <span class="n">cmfs</span><span class="o">=</span><span class="s2">&#34;CIE 1931 2 Degree Standard Observer&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">284</span><span class="cl">    <span class="n">axes</span><span class="o">=</span><span class="n">ax</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">285</span><span class="cl">    <span class="n">show</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">286</span><span class="cl">    <span class="n">title</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">287</span><span class="cl">    <span class="n">spectral_locus_colours</span><span class="o">=</span><span class="s2">&#34;white&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">288</span><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="ln">289</span><span class="cl">
</span></span><span class="line"><span class="ln">290</span><span class="cl"><span class="n">color_list</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;r&#34;</span><span class="p">,</span> <span class="s2">&#34;g&#34;</span><span class="p">,</span> <span class="s2">&#34;b&#34;</span><span class="p">,</span> <span class="s2">&#34;m&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="ln">291</span><span class="cl">
</span></span><span class="line"><span class="ln">292</span><span class="cl"><span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">c</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">color_list</span><span class="p">):</span>
</span></span><span class="line"><span class="ln">293</span><span class="cl">    <span class="n">ax</span><span class="o">.</span><span class="n">scatter</span><span class="p">(</span>
</span></span><span class="line"><span class="ln">294</span><span class="cl">        <span class="n">colors</span><span class="p">[</span><span class="s2">&#34;x_T&#34;</span><span class="p">][</span><span class="n">i</span><span class="p">],</span>
</span></span><span class="line"><span class="ln">295</span><span class="cl">        <span class="n">colors</span><span class="p">[</span><span class="s2">&#34;y_T&#34;</span><span class="p">][</span><span class="n">i</span><span class="p">],</span>
</span></span><span class="line"><span class="ln">296</span><span class="cl">        <span class="n">label</span><span class="o">=</span><span class="n">chl_labels</span><span class="p">[</span><span class="n">i</span><span class="p">],</span>
</span></span><span class="line"><span class="ln">297</span><span class="cl">        <span class="n">color</span><span class="o">=</span><span class="n">c</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">298</span><span class="cl">        <span class="n">edgecolors</span><span class="o">=</span><span class="s2">&#34;k&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">299</span><span class="cl">        <span class="n">alpha</span><span class="o">=</span><span class="mf">0.8</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">300</span><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="ln">301</span><span class="cl">
</span></span><span class="line"><span class="ln">302</span><span class="cl"><span class="c1"># Axes labels</span>
</span></span><span class="line"><span class="ln">303</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s2">&#34;x (2°)&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">304</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s2">&#34;y (2°)&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">305</span><span class="cl">
</span></span><span class="line"><span class="ln">306</span><span class="cl"><span class="c1"># Axes limits</span>
</span></span><span class="line"><span class="ln">307</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">set_xlim</span><span class="p">(</span><span class="mf">0.25</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">308</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">set_ylim</span><span class="p">(</span><span class="mf">0.35</span><span class="p">,</span> <span class="mf">0.45</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">309</span><span class="cl">
</span></span><span class="line"><span class="ln">310</span><span class="cl"><span class="c1"># Ticks separation</span>
</span></span><span class="line"><span class="ln">311</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">xaxis</span><span class="o">.</span><span class="n">set_major_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mf">0.01</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">312</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">xaxis</span><span class="o">.</span><span class="n">set_minor_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mf">0.005</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">313</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_major_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mf">0.01</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">314</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">yaxis</span><span class="o">.</span><span class="n">set_minor_locator</span><span class="p">(</span><span class="n">tck</span><span class="o">.</span><span class="n">MultipleLocator</span><span class="p">(</span><span class="mf">0.005</span><span class="p">))</span>
</span></span><span class="line"><span class="ln">315</span><span class="cl">
</span></span><span class="line"><span class="ln">316</span><span class="cl"><span class="c1"># Grid settings</span>
</span></span><span class="line"><span class="ln">317</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">grid</span><span class="p">(</span><span class="n">which</span><span class="o">=</span><span class="s2">&#34;major&#34;</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="s2">&#34;both&#34;</span><span class="p">,</span> <span class="n">linestyle</span><span class="o">=</span><span class="s2">&#34;--&#34;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s2">&#34;gray&#34;</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.8</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">318</span><span class="cl">
</span></span><span class="line"><span class="ln">319</span><span class="cl"><span class="c1"># Display legend</span>
</span></span><span class="line"><span class="ln">320</span><span class="cl"><span class="n">ax</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">labelcolor</span><span class="o">=</span><span class="s2">&#34;k&#34;</span><span class="p">,</span> <span class="n">edgecolor</span><span class="o">=</span><span class="s2">&#34;k&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">321</span><span class="cl">
</span></span><span class="line"><span class="ln">322</span><span class="cl"><span class="c1"># Adjust plot padding</span>
</span></span><span class="line"><span class="ln">323</span><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">tight_layout</span><span class="p">()</span>
</span></span><span class="line"><span class="ln">324</span><span class="cl">
</span></span><span class="line"><span class="ln">325</span><span class="cl"><span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span></span></span></code></pre></div><figure>
    <img src="img/CIE_chl_transm.png" alt="CIE color space for a 2° observer and calculated transmitted colors for Chlorophyll A and B in 70 % and 90 % acetone with D65 illuminant."><figcaption class="md-figure-caption">CIE color space for a 2° observer and calculated transmitted colors for Chlorophyll A and B in 70 % and 90 % acetone with D65 illuminant.</figcaption></figure><p>From the CIE color space plots, we can observe some key differences between the perceived colors of Chlorophyll A and B under both absorbance and transmittance conditions. Chlorophyll A primarily absorbs light in the red and blue regions of the spectrum, reflecting green-yellow light. Chlorophyll B absorbs a greater proportion of blue light than Chlorophyll A, reflecting a more yellowish hue.</p>
<h2 id="4-conclusion">4. Conclusion</h2>
<p>While both chlorophyll A and B are primarily responsible for the green color of plants, their slight differences in absorption spectra can lead to subtle variations in the exact shade of green. Despite being closely related pigments, they show distinct spectral absorption profiles, which ultimately influence their perceived colors.</p>
<p>Since both chlorophyll A and B absorb light in the blue and red regions, the light that is transmitted is primarily in the green region, which is why leaves appear green to our eyes. However, due to the slight difference in absorption peaks, Chlorophyll A tends to give a more deep green or olive green color, while Chlorophyll B gives a slightly lighter green or yellowish-green hue.</p>
<h2 id="5-bibliography">5. Bibliography</h2>
<p>(1) Kingdom, F. A. A.; Prins, N. <em>Psychophysics: A Practical Introduction</em>, 2nd ed.; Academic Press: Amsterdam, NL, 2016; pp. 19&ndash;20. <a href="https://doi.org/10.1016/C2012-0-01278-1">https://doi.org/10.1016/C2012-0-01278-1</a>.</p>
<p>(2) Schanda, J. <em>Colorimetry: Understanding the CIE System</em>; John Wiley &amp; Sons: Hoboken, NJ, USA, 2007; pp. 56&ndash;59. <a href="https://doi.org/10.1002/9780470175637">https://doi.org/10.1002/9780470175637</a>.</p>
<p>(3) Guild, J. The Colorimetric Properties of the Spectrum. <em>Phil. Trans. R. Soc. Lond. A</em> <strong>1931</strong>, <em>230</em> (681-693), 149&ndash;187. <a href="https://doi.org/10.1098/rsta.1932.0005">https://doi.org/10.1098/rsta.1932.0005</a>.</p>
<p>(4) Smith, T.; Guild, J. The C.I.E. Colorimetric Standards and Their Use. <em>Trans. Opt. Soc.</em> <strong>1931</strong>, <em>33</em> (3), 73&ndash;134. <a href="https://doi.org/10.1088/1475-4878/33/3/301">https://doi.org/10.1088/1475-4878/33/3/301</a>.</p>
<p>(5) Fairman, H. S.; Brill, M. H.; Hemmendinger, H. How the Cie 1931 Color-Matching Functions Were Derived from Wright-Guild Data. <em>Color Res. Appl.</em> <strong>1997</strong>, <em>22</em> (1), 11&ndash;23. <a href="https://doi.org/10.1002/%28SICI%291520-6378%28199702%2922:1%3C11::AID-COL4%3E3.0.CO;2-7">https://doi.org/10.1002/(SICI)1520-6378(199702)22:1&lt;11::AID-COL4&gt;3.0.CO;2-7</a>.</p>
<p>(6) Chazaux, M.; Schiphorst, C.; Lazzari, G.; Caffarri, S. Precise Estimation of Chlorophyll a , b and Carotenoid Content by Deconvolution of the Absorption Spectrum and New Simultaneous Equations for Chl Determination. <em>Plant J.</em> <strong>2022</strong>, <em>109</em> (6), 1630&ndash;1648. <a href="https://doi.org/10.1111/tpj.15643">https://doi.org/10.1111/tpj.15643</a>.</p>
<p>(7) Otto, M. <em>Chemometrics: Statistics and Computer Application in Analytical Chemistry</em>, 4th ed.; Wiley-VCH Verlag: Weinheim, DE, 2024; pp. 137&ndash;140. <a href="https://doi.org/10.1002/9783527843800">https://doi.org/10.1002/9783527843800</a>.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
